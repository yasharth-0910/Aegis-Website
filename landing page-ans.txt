"use client";

import Image from "next/image";
import Link from "next/link";
import Script from "next/script";
import { useEffect, useMemo, useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import { Sheet, SheetContent, SheetHeader, SheetTitle, SheetTrigger } from "@/components/ui/sheet";
import { Menu } from "lucide-react";

// Lightweight, inline visual components to keep everything in this file
function Stat({ label, value }: { label: string; value: string }) {
  return (
    <div className="rounded-xl border bg-card/60 backdrop-blur p-4 text-center">
      <div className="text-2xl font-bold tracking-tight" style={{ color: "#ff5a5f" }}>{value}</div>
      <div className="text-sm text-muted-foreground">{label}</div>
    </div>
  );
}

function HeatmapPreview() {
  const [hover, setHover] = useState<{ x: number; y: number } | null>(null);
  return (
    <div
      className="relative w-full h-64 md:h-80 rounded-2xl overflow-hidden border coral-gradient"
      onMouseMove={(e) => {
        const rect = (e.target as HTMLDivElement).getBoundingClientRect();
        setHover({ x: e.clientX - rect.left, y: e.clientY - rect.top });
      }}
      onMouseLeave={() => setHover(null)}
    >
      <div className="absolute inset-0 heatmap-overlay" />
      <div className="absolute inset-0 grid grid-cols-12 grid-rows-6 opacity-30">
        {Array.from({ length: 72 }).map((_, i) => (
          <div key={i} className="border border-white/10" />
        ))}
      </div>
      {hover && (
        <div
          className="pointer-events-none absolute w-40 h-40 rounded-full heatmap-blur"
          style={{ left: hover.x - 80, top: hover.y - 80 }}
        />
      )}
      <div className="absolute bottom-3 right-3 text-xs bg-black/40 text-white px-2 py-1 rounded-md">
        Interactive preview
      </div>
    </div>
  );
}

function CompareSlider() {
  const [pos, setPos] = useState(50);
  return (
    <div className="relative w-full h-72 md:h-96 rounded-2xl overflow-hidden border">
      <Image
        src="https://images.unsplash.com/photo-1520975916090-3105956dac38?q=80&w=1600&auto=format&fit=crop"
        alt="Traditional Crime Map"
        fill
        className="object-cover"
        sizes="(max-width: 768px) 100vw, 50vw"
        priority
        unoptimized
      />
      <div
        className="absolute inset-y-0 left-0 overflow-hidden"
        style={{ width: `${pos}%` }}
      >
        <div className="absolute inset-0 coral-prediction-layer" />
        <div className="absolute inset-0 flex items-start">
          <Badge className="m-3 bg-black/60 hover:bg-black/60">AEGIS Predictions</Badge>
        </div>
      </div>
      <div className="absolute inset-0 flex items-start justify-end">
        <Badge variant="secondary" className="m-3 bg-white/70">Traditional Map</Badge>
      </div>
      <input
        aria-label="Comparison Slider"
        type="range"
        min={0}
        max={100}
        value={pos}
        onChange={(e) => setPos(Number(e.target.value))}
        className="absolute inset-x-6 bottom-4 w-[calc(100%-3rem)]"
      />
    </div>
  );
}

function MiniTrendChart({ values }: { values: number[] }) {
  const points = useMemo(() => {
    const max = Math.max(...values);
    const min = Math.min(...values);
    const width = 240;
    const height = 72;
    return values
      .map((v, i) => {
        const x = (i / (values.length - 1)) * width;
        const y = height - ((v - min) / (max - min || 1)) * height;
        return `${x},${y}`;
      })
      .join(" ");
  }, [values]);
  return (
    <svg viewBox="0 0 240 72" className="w-full h-20">
      <polyline fill="none" stroke="#ff5a5f" strokeWidth={3} points={points} />
    </svg>
  );
}

function TechPill({ src, alt, label }: { src: string; alt: string; label: string }) {
  return (
    <div className="flex items-center gap-2 rounded-full border px-3 py-2 bg-card/70">
      <Image src={src} alt={alt} width={18} height={18} className="rounded-sm" unoptimized />
      <span className="text-sm">{label}</span>
    </div>
  );
}

export default function Home() {
  const [loadingScore, setLoadingScore] = useState(false);
  const [score, setScore] = useState<number | null>(null);

  const handleGetScore = async () => {
    setLoadingScore(true);
    // Simulate API scoring latency
    await new Promise((r) => setTimeout(r, 900));
    setScore(Math.max(0, Math.min(100, Math.round(70 + (Math.random() - 0.5) * 20))));
    setLoadingScore(false);
  };

  // Structured Data (Organization + Product)
  const jsonLd = {
    "@context": "https://schema.org",
    "@type": "Organization",
    name: "AEGIS",
    url: "https://aegis.example.com",
    logo: "https://images.unsplash.com/photo-1542351967-d5ae722fed34?q=80&w=512&auto=format&fit=crop",
    sameAs: [
      "https://github.com/aegis",
      "https://twitter.com/aegis"
    ],
  };

  return (
    <div className="min-h-screen bg-background">
      <Script id="aegis-ld" type="application/ld+json" dangerouslySetInnerHTML={{ __html: JSON.stringify(jsonLd) }} />

      {/* Header */}
      <header className="sticky top-0 z-40 backdrop-blur supports-[backdrop-filter]:bg-background/70 border-b">
        <div className="mx-auto max-w-7xl px-4 py-3 flex items-center justify-between">
          <Link href="#" className="flex items-center gap-2">
            <div className="size-8 rounded-md flex items-center justify-center" style={{ backgroundColor: "#ff5a5f" }}>
              <span className="text-white font-black">A</span>
            </div>
            <span className="font-semibold tracking-tight">AEGIS</span>
          </Link>

          {/* Mobile menu */}
          <div className="md:hidden">
            <Sheet>
              <SheetTrigger asChild>
                <Button variant="outline" size="icon" aria-label="Open menu">
                  <Menu className="h-5 w-5" />
                </Button>
              </SheetTrigger>
              <SheetContent side="right">
                <SheetHeader>
                  <SheetTitle>AEGIS</SheetTitle>
                </SheetHeader>
                <nav className="mt-4 grid gap-3 text-sm">
                  <a href="#features" className="py-2">Features</a>
                  <a href="#tech" className="py-2">Technology</a>
                  <a href="#use-cases" className="py-2">Use Cases</a>
                  <a href="#methodology" className="py-2">Methodology</a>
                  <a href="#team" className="py-2">Team</a>
                  <div className="mt-2 grid gap-2">
                    <Button asChild>
                      <Link href="#demo">View Live Demo</Link>
                    </Button>
                    <Button onClick={handleGetScore} className="text-white" style={{ backgroundColor: "#ff5a5f" }}>
                      Get Safety Score Now
                    </Button>
                  </div>
                </nav>
              </SheetContent>
            </Sheet>
          </div>

          <nav className="hidden md:flex items-center gap-6 text-sm">
            <a href="#features" className="hover:opacity-80">Features</a>
            <a href="#tech" className="hover:opacity-80">Technology</a>
            <a href="#use-cases" className="hover:opacity-80">Use Cases</a>
            <a href="#methodology" className="hover:opacity-80">Methodology</a>
            <a href="#team" className="hover:opacity-80">Team</a>
          </nav>
          <div className="hidden md:flex items-center gap-2">
            <Button asChild variant="outline">
              <Link href="#demo">View Live Demo</Link>
            </Button>
            <Button onClick={handleGetScore} style={{ backgroundColor: "#ff5a5f" }}>
              Get Safety Score Now
            </Button>
          </div>
        </div>
      </header>

      <main className="mx-auto max-w-7xl px-4">
        {/* 1. Hero */}
        <section className="py-12 md:py-20 grid md:grid-cols-2 items-center gap-10">
          <div>
            <Badge className="mb-4 bg-black/10 text-foreground">Predictive • Severity-Weighted • Real-Time</Badge>
            <h1 className="text-4xl md:text-5xl font-extrabold tracking-tight">
              AEGIS - Predictive Urban Safety Intelligence
            </h1>
            <p className="mt-4 text-lg text-muted-foreground">
              Stay Safe. Stay Informed. Make data-driven decisions with AI-powered safety predictions.
            </p>
            <div className="mt-6 flex flex-wrap items-center gap-3">
              <Button onClick={handleGetScore} size="lg" className="text-white" style={{ backgroundColor: "#ff5a5f" }}>
                {loadingScore ? "Calculating…" : "Get Safety Score Now"}
              </Button>
              <Button asChild variant="outline" size="lg">
                <Link href="#demo">View Live Demo</Link>
              </Button>
              {score !== null && (
                <span className="ml-2 text-sm">Current location safety score: <b>{score}/100</b></span>
              )}
            </div>
            <div className="mt-8 grid grid-cols-3 gap-3">
              <Stat label="Crime Records Analyzed" value="1M+" />
              <Stat label="Community Areas" value="77" />
              <Stat label="Real-Time Predictions" value="24/7" />
            </div>
          </div>
          <div className="relative">
            <HeatmapPreview />
          </div>
        </section>

        <Separator />

        {/* 2. Problem Statement */}
        <section className="py-12 md:py-16">
          <h2 className="text-2xl md:text-3xl font-bold tracking-tight mb-6">Urban Safety Shouldn't Be a Guessing Game</h2>
          <div className="grid md:grid-cols-2 gap-6">
            <ul className="space-y-3 text-muted-foreground">
              <li>• Citizens lack real-time safety intelligence when navigating cities</li>
              <li>• Traditional crime maps only show past incidents, not future risks</li>
              <li>• All crimes treated equally despite varying severity levels</li>
              <li>• No predictive capability for proactive decision-making</li>
            </ul>
            <CompareSlider />
          </div>
        </section>

        <Separator />

        {/* 3. Solution Overview */}
        <section className="py-12 md:py-16">
          <h2 className="text-2xl md:text-3xl font-bold tracking-tight mb-6">Introducing AEGIS: The Future of Urban Safety Intelligence</h2>
          <div className="grid md:grid-cols-3 gap-6">
            <Card>
              <CardHeader>
                <CardTitle>Severity-Weighted Safety</CardTitle>
              </CardHeader>
              <CardContent className="text-sm text-muted-foreground">
                Transforms raw crime data into severity-weighted, predictive safety scores using BJS standards.
              </CardContent>
            </Card>
            <Card>
              <CardHeader>
                <CardTitle>Temporal + Spatial Modeling</CardTitle>
              </CardHeader>
              <CardContent className="text-sm text-muted-foreground">
                Combines historical patterns with spatial aggregation across 77 community areas for continuous scoring.
              </CardContent>
            </Card>
            <Card>
              <CardHeader>
                <CardTitle>Explainable & Transparent</CardTitle>
              </CardHeader>
              <CardContent className="text-sm text-muted-foreground">
                SHAP-based explanations and calibration for trustworthy prediction insights.
              </CardContent>
            </Card>
          </div>
          <div className="mt-6 rounded-2xl border overflow-hidden">
            <div className="p-4 border-b bg-muted/50">System Data Flow</div>
            <div className="p-4 grid md:grid-cols-4 gap-4 items-center">
              <div className="text-center">
                <Badge variant="secondary">Chicago Data</Badge>
                <MiniTrendChart values={[12, 18, 14, 20, 16, 24, 21, 30]} />
              </div>
              <div className="text-center">➡️ Feature Engineering</div>
              <div className="text-center">
                <Badge className="bg-[--chart-2]">XGBoost</Badge>
                <MiniTrendChart values={[40, 44, 46, 48, 51, 55, 59, 62]} />
              </div>
              <div className="text-center">➡️ Real-Time Safety Scores</div>
            </div>
          </div>
        </section>

        <Separator />

        {/* 4. Key Features */}
        <section id="features" className="py-12 md:py-16">
          <h2 className="text-2xl md:text-3xl font-bold tracking-tight mb-6">Key Features</h2>
          <div className="grid md:grid-cols-2 gap-6">
            <Card>
              <CardHeader><CardTitle>Location Intelligence</CardTitle></CardHeader>
              <CardContent className="space-y-2 text-sm text-muted-foreground">
                <p>• Real-time safety scores for any location</p>
                <p>• Community area risk analysis</p>
                <p>• Temporal pattern recognition (hourly, daily, seasonal)</p>
              </CardContent>
            </Card>
            <Card>
              <CardHeader><CardTitle>Smart Route Guidance</CardTitle></CardHeader>
              <CardContent className="space-y-2 text-sm text-muted-foreground">
                <p>• Safest path recommendations between two points</p>
                <p>• Time-aware routing considering hour/day patterns</p>
                <p>• Alternative route suggestions with risk levels</p>
              </CardContent>
            </Card>
            <Card>
              <CardHeader><CardTitle>Family Safety Tracking</CardTitle></CardHeader>
              <CardContent className="space-y-2 text-sm text-muted-foreground">
                <p>• Monitor family members' locations and safety</p>
                <p>• Shared safety insights and alerts</p>
                <p>• Privacy-focused design with user control</p>
              </CardContent>
            </Card>
            <Card>
              <CardHeader><CardTitle>Predictive Analytics</CardTitle></CardHeader>
              <CardContent className="space-y-2 text-sm text-muted-foreground">
                <p>• ML-powered forecasting with XGBoost</p>
                <p>• BJS severity-weighted scoring & risk categories</p>
                <p>• Confidence intervals and calibration</p>
              </CardContent>
            </Card>
          </div>
        </section>

        <Separator />

        {/* 5. Technology Stack */}
        <section id="tech" className="py-12 md:py-16">
          <h2 className="text-2xl md:text-3xl font-bold tracking-tight mb-6">Built on Cutting-Edge Technology</h2>
          <div className="flex flex-wrap gap-3">
            <TechPill src="/next.svg" alt="Next.js" label="Next.js" />
            <TechPill src="/vercel.svg" alt="Vercel" label="Tailwind CSS" />
            <TechPill src="https://upload.wikimedia.org/wikipedia/commons/3/38/Leaflet_Logo.svg" alt="Leaflet" label="Leaflet.js" />
            <TechPill src="https://upload.wikimedia.org/wikipedia/commons/3/37/FastAPI_logo.png" alt="FastAPI" label="FastAPI" />
            <TechPill src="https://upload.wikimedia.org/wikipedia/commons/2/29/Postgresql_elephant.svg" alt="PostgreSQL" label="PostgreSQL + PostGIS" />
            <TechPill src="https://upload.wikimedia.org/wikipedia/commons/6/69/XGBoost_logo.png" alt="XGBoost" label="XGBoost" />
            <TechPill src="https://upload.wikimedia.org/wikipedia/commons/7/7c/Redis_Logo.svg" alt="Redis" label="Redis" />
            <TechPill src="https://upload.wikimedia.org/wikipedia/commons/1/17/Google-flutter-logo.png" alt="Flutter" label="Flutter" />
          </div>
          <div className="mt-6 grid md:grid-cols-3 gap-6">
            <Card>
              <CardHeader><CardTitle>Frontend</CardTitle></CardHeader>
              <CardContent className="text-sm text-muted-foreground">Next.js, Tailwind CSS, Shadcn/UI, Leaflet.js for mapping</CardContent>
            </Card>
            <Card>
              <CardHeader><CardTitle>Backend</CardTitle></CardHeader>
              <CardContent className="text-sm text-muted-foreground">FastAPI, PostgreSQL + PostGIS, Redis caching</CardContent>
            </Card>
            <Card>
              <CardHeader><CardTitle>ML Pipeline</CardTitle></CardHeader>
              <CardContent className="text-sm text-muted-foreground">XGBoost, SHAP explainability, ONNX optimization</CardContent>
            </Card>
          </div>
        </section>

        <Separator />

        {/* 6. Use Cases */}
        <section id="use-cases" className="py-12 md:py-16">
          <h2 className="text-2xl md:text-3xl font-bold tracking-tight mb-6">Use Cases</h2>
          <Tabs defaultValue="citizens" className="w-full">
            <TabsList className="grid grid-cols-3 w-full md:w-auto">
              <TabsTrigger value="citizens">Citizens & Tourists</TabsTrigger>
              <TabsTrigger value="businesses">Businesses</TabsTrigger>
              <TabsTrigger value="agencies">Agencies & Planners</TabsTrigger>
            </TabsList>
            <TabsContent value="citizens">
              <ul className="mt-4 space-y-2 text-muted-foreground">
                <li>• Plan safe routes and timing for activities</li>
                <li>• Make informed decisions about neighborhoods to visit</li>
                <li>• Receive location-based safety recommendations</li>
              </ul>
            </TabsContent>
            <TabsContent value="businesses">
              <ul className="mt-4 space-y-2 text-muted-foreground">
                <li>• Optimize operating hours based on safety patterns</li>
                <li>• Plan delivery routes and scheduling</li>
                <li>• Assess location safety for new establishments</li>
              </ul>
            </TabsContent>
            <TabsContent value="agencies">
              <ul className="mt-4 space-y-2 text-muted-foreground">
                <li>• Data-driven resource allocation</li>
                <li>• Evidence-based policy making</li>
                <li>• Identify intervention priorities using severity weights</li>
              </ul>
            </TabsContent>
          </Tabs>
        </section>

        <Separator />

        {/* 7. Data & Methodology */}
        <section id="methodology" className="py-12 md:py-16">
          <h2 className="text-2xl md:text-3xl font-bold tracking-tight mb-6">Rigorous Science Behind Every Prediction</h2>
          <div className="grid md:grid-cols-2 gap-6">
            <Card>
              <CardHeader><CardTitle>Data Foundation</CardTitle></CardHeader>
              <CardContent className="text-sm text-muted-foreground space-y-1">
                <p>• Chicago Crime Dataset: 1M+ records (2015-2025)</p>
                <p>• BJS National Survey of Crime Severity weights</p>
                <p>• 77 Community areas with spatial boundaries</p>
              </CardContent>
            </Card>
            <Card>
              <CardHeader><CardTitle>ML Methodology</CardTitle></CardHeader>
              <CardContent className="text-sm text-muted-foreground space-y-1">
                <p>• XGBoost regression for continuous score prediction</p>
                <p>• Temporal feature engineering (month, day, hour)</p>
                <p>• Spatial aggregation by community areas</p>
                <p>• Cross-validation and temporal splitting for evaluation</p>
                <p>• Validation: MAE/RMSE, SHAP importance, calibration</p>
              </CardContent>
            </Card>
          </div>
        </section>

        <Separator />

        {/* 8. Team & Academic Backing */}
        <section id="team" className="py-12 md:py-16">
          <h2 className="text-2xl md:text-3xl font-bold tracking-tight mb-6">Team & Academic Backing</h2>
          <div className="grid md:grid-cols-2 gap-6 items-start">
            <Card>
              <CardHeader>
                <CardTitle>Institution</CardTitle>
              </CardHeader>
              <CardContent className="text-sm text-muted-foreground space-y-1">
                <p><b>Jaypee Institute of Information Technology, Noida</b></p>
                <p>Department: Computer Science & Engineering</p>
                <p>Academic Program: Minor Project-I (15B19CI591), B.Tech CSE, 3rd Year 5th Sem (2025-2026)</p>
              </CardContent>
            </Card>
            <Card>
              <CardHeader>
                <CardTitle>Team</CardTitle>
              </CardHeader>
              <CardContent className="text-sm text-muted-foreground space-y-2">
                <p>• Yasharth Singh (9923103059)</p>
                <p>• Nikunj Sethi (9923103069)</p>
                <p>• Shrey Sircar (9923103072)</p>
                <p>Supervisor: Prakhar Mishra</p>
              </CardContent>
            </Card>
          </div>
        </section>

        <Separator />

        {/* 9. CTA */}
        <section className="py-12 md:py-16 text-center">
          <h2 className="text-2xl md:text-3xl font-bold tracking-tight mb-3">Start Using AEGIS Today</h2>
          <p className="text-muted-foreground mb-6">Experience predictive, severity-weighted safety intelligence for Chicago.</p>
          <div className="flex flex-wrap items-center justify-center gap-3">
            <Button size="lg" className="text-white" style={{ backgroundColor: "#ff5a5f" }}>Try Web Dashboard</Button>
            <Button size="lg" variant="outline">Download Mobile App</Button>
            <Button size="lg" variant="outline">View API Documentation</Button>
            <Button size="lg" variant="ghost">Contact Our Team</Button>
          </div>
        </section>

        <Separator />

        {/* 10. Footer */}
        <footer className="py-10 text-sm">
          <div className="grid md:grid-cols-4 gap-6">
            <div>
              <div className="flex items-center gap-2 mb-2">
                <div className="size-7 rounded-md" style={{ backgroundColor: "#ff5a5f" }} />
                <span className="font-semibold">AEGIS</span>
              </div>
              <p className="text-muted-foreground">AI-powered, predictive urban safety intelligence.</p>
            </div>
            <div>
              <div className="font-medium mb-2">Links</div>
              <ul className="space-y-1 text-muted-foreground">
                <li><a href="#about" className="hover:underline">About</a></li>
                <li><a href="#docs" className="hover:underline">Documentation</a></li>
                <li><a href="#api" className="hover:underline">API</a></li>
                <li><a href="#privacy" className="hover:underline">Privacy Policy</a></li>
                <li><a href="#terms" className="hover:underline">Terms of Service</a></li>
              </ul>
            </div>
            <div>
              <div className="font-medium mb-2">Contact</div>
              <ul className="space-y-1 text-muted-foreground">
                <li>Academic Contact: JIIT Noida</li>
                <li>Email: team@aegis.edu</li>
              </ul>
            </div>
            <div>
              <div className="font-medium mb-2">Social</div>
              <ul className="space-y-1 text-muted-foreground">
                <li><a href="https://github.com" target="_blank" className="hover:underline" rel="noreferrer">GitHub</a></li>
                <li><a href="#papers" className="hover:underline">Research Papers</a></li>
                <li><a href="#updates" className="hover:underline">Project Updates</a></li>
              </ul>
            </div>
          </div>
          <div className="mt-8 text-center text-muted-foreground">© {new Date().getFullYear()} AEGIS • Built with academic rigor and real-world impact.</div>
        </footer>
      </main>
    </div>
  );
}

import type { Metadata } from "next";
import "./globals.css";
import VisualEditsMessenger from "../visual-edits/VisualEditsMessenger";
import ErrorReporter from "@/components/ErrorReporter";
import Script from "next/script";

export const metadata: Metadata = {
  title: "AEGIS - Predictive Urban Safety Intelligence",
  description: "AEGIS provides AI-powered, predictive urban safety intelligence using severity-weighted crime analytics. Get real-time safety scores and smart route guidance for Chicago.",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className="antialiased">
        <ErrorReporter />
        <Script
          src="https://slelguoygbfzlpylpxfs.supabase.co/storage/v1/object/public/scripts//route-messenger.js"
          strategy="afterInteractive"
          data-target-origin="*"
          data-message-type="ROUTE_CHANGE"
          data-include-search-params="true"
          data-only-in-iframe="true"
          data-debug="true"
          data-custom-data='{"appName": "YourApp", "version": "1.0.0", "greeting": "hi"}'
        />
        {children}
        <VisualEditsMessenger />
      </body>
    </html>
  );
}
/* Updated: 2025-09-23T05:50:34.270Z */
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300..900&display=swap');
@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

:root {
  --radius: 0.625rem;
  --background: oklch(1 0 0);
  --foreground: oklch(0.145 0 0);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.145 0 0);
  --primary: #ff5a5f;
  --primary-foreground: oklch(0.985 0 0);
  --secondary: oklch(0.97 0 0);
  --secondary-foreground: oklch(0.205 0 0);
  --muted: oklch(0.97 0 0);
  --muted-foreground: oklch(0.556 0 0);
  --accent: oklch(0.97 0 0);
  --accent-foreground: oklch(0.205 0 0);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.922 0 0);
  --input: oklch(0.922 0 0);
  --ring: oklch(0.708 0 0);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.145 0 0);
  --sidebar-primary: oklch(0.205 0 0);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.97 0 0);
  --sidebar-accent-foreground: oklch(0.205 0 0);
  --sidebar-border: oklch(0.922 0 0);
  --sidebar-ring: oklch(0.708 0 0);
}

.dark {
  --background: oklch(0.145 0 0);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.205 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.205 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: #ff5a5f;
  --primary-foreground: oklch(0.205 0 0);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.269 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.556 0 0);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.269 0 0);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.556 0 0);
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
    font-family: "Inter", system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, "Apple Color Emoji", "Segoe UI Emoji";
  }

  /* AEGIS custom utility classes */
  .coral-gradient {
    background: radial-gradient(1200px 600px at 10% -10%, color-mix(in oklch, var(--primary) 13%, transparent), transparent 60%),
                radial-gradient(800px 500px at 90% 0%, color-mix(in oklch, var(--primary) 10%, transparent), transparent 55%),
                linear-gradient(180deg, var(--background), var(--background));
  }

  .heatmap-overlay {
    background-image: radial-gradient(120px 120px at 20% 30%, color-mix(in oklch, var(--primary) 33%, transparent), transparent 60%),
                      radial-gradient(140px 140px at 70% 40%, color-mix(in oklch, var(--primary) 40%, transparent), transparent 65%),
                      radial-gradient(100px 100px at 40% 70%, color-mix(in oklch, var(--primary) 27%, transparent), transparent 60%);
    mix-blend-mode: multiply;
  }

  .heatmap-blur {
    background: radial-gradient(circle, var(--primary) 0%, color-mix(in oklch, var(--primary) 60%, transparent) 50%, transparent 70%);
    filter: blur(18px) saturate(120%);
    opacity: 0.9;
    pointer-events: none;
  }

  .coral-prediction-layer {
    background: linear-gradient(135deg, color-mix(in oklch, var(--primary) 65%, transparent), color-mix(in oklch, var(--primary) 25%, transparent));
    mix-blend-mode: multiply;
  }
}

/* Hide Next.js error overlay portal */
nextjs-portal {
  display: none !important;
}
"use client";

import ErrorReporter from "@/components/ErrorReporter";

export default ErrorReporter;

import * as React from "react"

const MOBILE_BREAKPOINT = 768

export function useIsMobile() {
  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)

  React.useEffect(() => {
    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)
    const onChange = () => {
      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)
    }
    mql.addEventListener("change", onChange)
    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)
    return () => mql.removeEventListener("change", onChange)
  }, [])

  return !!isMobile
}

import * as React from 'react';

const MOBILE_BREAKPOINT = 768;

export function useIsMobile() {
  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(
    undefined,
  );

  React.useEffect(() => {
    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`);
    const onChange = () => {
      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT);
    };
    mql.addEventListener('change', onChange);
    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT);
    return () => mql.removeEventListener('change', onChange);
  }, []);

  return !!isMobile;
}

import { type ClassValue, clsx } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}
